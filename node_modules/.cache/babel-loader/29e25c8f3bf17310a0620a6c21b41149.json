{"ast":null,"code":"import _defineProperty from \"C:/Users/Edo/Documents/GitHub/infomedic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport var INPUT_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"],\n  states: [\"focused\", \"hovered\"],\n  types: [\"text\", \"email\", \"tel\", \"password\", \"number\", \"search\", \"color\", \"date\", \"time\"]\n};\nexport var Input = forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      color = _a.color,\n      readOnly = _a.readOnly,\n      rounded = _a.rounded,\n      size = _a.size,\n      state = _a.state,\n      isStatic = _a.static,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"readOnly\", \"rounded\", \"size\", \"state\", \"static\"]);\n\n  var isReadOnly = readOnly === true || isStatic === true;\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"input\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-rounded\", rounded), _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-static\", isStatic), _defineProperty(_classNames, \"is-\".concat(state), state), _classNames), className),\n    readOnly: isReadOnly,\n    ref: ref\n  }, rest));\n}, {\n  as: \"input\"\n});\nInput.displayName = \"Input\";\nInput.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  readOnly: PropTypes.bool,\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  static: PropTypes.bool,\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/input.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAKA,OAAO,IAAM,cAAc,GAAG;AAC5B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CADqB;AAE5B,EAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFoB;AAG5B,EAAA,KAAK,EAAE,CACL,MADK,EAEL,OAFK,EAGL,KAHK,EAIL,UAJK,EAKL,QALK,EAML,QANK,EAOL,OAPK,EAQL,MARK,EASL,MATK;AAHqB,CAAvB;AAyCP,OAAO,IAAM,KAAK,GAAG,YAAY,CAC/B,UACE,EADF,EAWE,GAXF,EAYI;AAAA;;AAXF,MACE,SADF,GAOkB,EAPlB,CACE,SADF;AAAA,MAEE,KAFF,GAOkB,EAPlB,CAEE,KAFF;AAAA,MAGE,QAHF,GAOkB,EAPlB,CAGE,QAHF;AAAA,MAIE,OAJF,GAOkB,EAPlB,CAIE,OAJF;AAAA,MAKE,IALF,GAOkB,EAPlB,CAKE,IALF;AAAA,MAME,KANF,GAOkB,EAPlB,CAME,KANF;AAAA,MAOU,QAPV,GAOkB,EAPlB,CAOE,MAPF;AAAA,MAQE,IARF,GAQE,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,CAAA,CARF;;AAYA,MAAM,UAAU,GAAG,QAAQ,KAAK,IAAb,IAAqB,QAAQ,KAAK,IAArD;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,OADmB,+DAGV,KAHU,GAGA,KAHA,gCAIjB,YAJiB,EAIH,OAJG,6CAKV,IALU,GAKD,IALC,gCAMjB,WANiB,EAMJ,QANI,6CAOV,KAPU,GAOA,KAPA,iBASnB,SATmB,CADf;AAYN,IAAA,QAAQ,EAAE,UAZJ;AAaN,IAAA,GAAG,EAAE;AAbC,GAAA,EAcF,IAdE,CAAR,CADF;AAkBD,CAlC8B,EAmC/B;AAAE,EAAA,EAAE,EAAE;AAAN,CAnC+B,CAA1B;AAsCP,KAAK,CAAC,WAAN,GAAoB,OAApB;AACA,KAAK,CAAC,SAAN,GAAkB;AAChB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADS;AAEhB,EAAA,QAAQ,EAAE,SAAS,CAAC,IAFJ;AAGhB,EAAA,OAAO,EAAE,SAAS,CAAC,IAHH;AAIhB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAJU;AAKhB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CALS;AAMhB,EAAA,MAAM,EAAE,SAAS,CAAC,IANF;AAOhB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAPU,CAAlB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { forwardRefAs, Generic } from \"../../base\";\r\nexport const INPUT_DEFAULTS = {\r\n    sizes: [\"small\", \"medium\", \"large\"],\r\n    states: [\"focused\", \"hovered\"],\r\n    types: [\r\n        \"text\",\r\n        \"email\",\r\n        \"tel\",\r\n        \"password\",\r\n        \"number\",\r\n        \"search\",\r\n        \"color\",\r\n        \"date\",\r\n        \"time\",\r\n    ],\r\n};\r\nexport const Input = forwardRefAs((_a, ref) => {\r\n    var { className, color, readOnly, rounded, size, state, static: isStatic } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\", \"readOnly\", \"rounded\", \"size\", \"state\", \"static\"]);\r\n    const isReadOnly = readOnly === true || isStatic === true;\r\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"input\", {\r\n            [`is-${color}`]: color,\r\n            \"is-rounded\": rounded,\r\n            [`is-${size}`]: size,\r\n            \"is-static\": isStatic,\r\n            [`is-${state}`]: state,\r\n        }, className), readOnly: isReadOnly, ref: ref }, rest)));\r\n}, { as: \"input\" });\r\nInput.displayName = \"Input\";\r\nInput.propTypes = {\r\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    readOnly: PropTypes.bool,\r\n    rounded: PropTypes.bool,\r\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    static: PropTypes.bool,\r\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"module"}