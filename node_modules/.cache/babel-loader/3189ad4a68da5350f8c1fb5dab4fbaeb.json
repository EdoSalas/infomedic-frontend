{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Edo/Documents/GitHub/infomedic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nexport var canUseDOM = function canUseDOM() {\n  return !(typeof window === \"undefined\" || window.document === undefined || window.document.createElement === undefined);\n};\nexport var combineRefs = function combineRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (instance) {\n    var _iterator = _createForOfIteratorHelper(refs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n\n        if (item === null || item === undefined) {\n          continue;\n        }\n\n        if (typeof item === \"object\") {\n          item.current = instance;\n        } else {\n          item(instance);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n};\nexport var noop = function noop() {};","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":";AAEA,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY;AAAA,SACvB,EACE,OAAO,MAAP,KAAkB,WAAlB,IACA,MAAM,CAAC,QAAP,KAAoB,SADpB,IAEA,MAAM,CAAC,QAAP,CAAgB,aAAhB,KAAkC,SAHpC,CADuB;AAAA,CAAlB;AAOP,OAAO,IAAM,WAAW,GAAG,SAAd,WAAc,GAEvB;AAAA,oCADC,IACD;AADC,IAAA,IACD;AAAA;;AACF,SAAO,UAAC,QAAD,EAAuB;AAAA,+CACT,IADS;AAAA;;AAAA;AAC5B,0DAAyB;AAAA,YAAd,IAAc;;AACvB,YAAI,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,SAA9B,EAAyC;AACvC;AACD;;AAED,YAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC3B,UAAA,IAAyC,CAAC,OAA1C,GAAoD,QAApD;AACF,SAFD,MAEO;AACL,UAAA,IAAI,CAAC,QAAD,CAAJ;AACD;AACF;AAX2B;AAAA;AAAA;AAAA;AAAA;AAY7B,GAZD;AAaD,CAhBM;AAkBP,OAAO,IAAM,IAAI,GAAG,SAAP,IAAO,GAAK,CAAG,CAArB","sourceRoot":"","sourcesContent":["export const canUseDOM = () => !(typeof window === \"undefined\" ||\r\n    window.document === undefined ||\r\n    window.document.createElement === undefined);\r\nexport const combineRefs = (...refs) => {\r\n    return (instance) => {\r\n        for (const item of refs) {\r\n            if (item === null || item === undefined) {\r\n                continue;\r\n            }\r\n            if (typeof item === \"object\") {\r\n                item.current = instance;\r\n            }\r\n            else {\r\n                item(instance);\r\n            }\r\n        }\r\n    };\r\n};\r\nexport const noop = () => { };\r\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}