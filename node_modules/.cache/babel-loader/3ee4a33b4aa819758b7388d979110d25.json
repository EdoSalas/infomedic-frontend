{"ast":null,"code":"import _defineProperty from \"C:/Users/Edo/Documents/GitHub/infomedic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport var TEXTAREA_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"],\n  states: [\"focused\", \"hovered\"]\n};\nexport var Textarea = forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      color = _a.color,\n      fixedSize = _a.fixedSize,\n      size = _a.size,\n      state = _a.state,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fixedSize\", \"size\", \"state\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"textarea\", (_classNames = {\n      \"has-fixed-size\": fixedSize\n    }, _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-\".concat(state), state), _classNames), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"textarea\",\n  rows: 4\n});\nTextarea.displayName = \"Textarea\";\nTextarea.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fixedSize: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/textarea.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAKA,OAAO,IAAM,iBAAiB,GAAG;AAC/B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CADwB;AAE/B,EAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AAFuB,CAA1B;AA0BP,OAAO,IAAM,QAAQ,GAAG,YAAY,CAClC,UAAC,EAAD,EAAwD,GAAxD,EAA+D;AAAA;;AAA9D,MAAE,SAAF,GAA0C,EAA1C,CAAE,SAAF;AAAA,MAAa,KAAb,GAA0C,EAA1C,CAAa,KAAb;AAAA,MAAoB,SAApB,GAA0C,EAA1C,CAAoB,SAApB;AAAA,MAA+B,IAA/B,GAA0C,EAA1C,CAA+B,IAA/B;AAAA,MAAqC,KAArC,GAA0C,EAA1C,CAAqC,KAArC;AAAA,MAA4C,IAA5C,GAA4C,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,WAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAA5C;;AAA+D,SAC9D,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,UADmB;AAGjB,wBAAkB;AAHD,iDAIV,KAJU,GAIA,KAJA,6CAKV,IALU,GAKD,IALC,6CAMV,KANU,GAMA,KANA,iBAQnB,SARmB,CADf;AAWN,IAAA,GAAG,EAAE;AAXC,GAAA,EAYF,IAZE,CAAR,CAD8D;AAe/D,CAhBiC,EAiBlC;AACE,EAAA,EAAE,EAAE,UADN;AAEE,EAAA,IAAI,EAAE;AAFR,CAjBkC,CAA7B;AAuBP,QAAQ,CAAC,WAAT,GAAuB,UAAvB;AACA,QAAQ,CAAC,SAAT,GAAqB;AACnB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADY;AAEnB,EAAA,SAAS,EAAE,SAAS,CAAC,IAFF;AAGnB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAHa;AAInB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAJY,CAArB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { forwardRefAs, Generic } from \"../../base\";\r\nexport const TEXTAREA_DEFAULTS = {\r\n    sizes: [\"small\", \"medium\", \"large\"],\r\n    states: [\"focused\", \"hovered\"],\r\n};\r\nexport const Textarea = forwardRefAs((_a, ref) => {\r\n    var { className, color, fixedSize, size, state } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fixedSize\", \"size\", \"state\"]);\r\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"textarea\", {\r\n            \"has-fixed-size\": fixedSize,\r\n            [`is-${color}`]: color,\r\n            [`is-${size}`]: size,\r\n            [`is-${state}`]: state,\r\n        }, className), ref: ref }, rest)));\r\n}, {\r\n    as: \"textarea\",\r\n    rows: 4,\r\n});\r\nTextarea.displayName = \"Textarea\";\r\nTextarea.propTypes = {\r\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    fixedSize: PropTypes.bool,\r\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n//# sourceMappingURL=textarea.js.map"]},"metadata":{},"sourceType":"module"}